{"name": "test_invalid_lattlong_value", "status": "skipped", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = <lookup 'status_codes'>.BAD_REQUEST\n +    where <lookup 'status_codes'> = requests.codes", "trace": "self = <functional_tests.test_location_search.TestLocationSearch object at 0x0000023D2A1F0370>, get_location_search_api_url = 'https://www.metaweather.com/api/location/search/'\nlocation_search_lattlong_invalid = 'abc, xyz'\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.Smoke\n    @pytest.mark.xfail\n    def test_invalid_lattlong_value(self, get_location_search_api_url,\n                                    location_search_lattlong_invalid):\n        \"\"\"\n            Test to verify if appropriate error is logged when request on metaweather\n                api Location Search, on passing invalid latitudes & longitudes.\n        \"\"\"\n        self.log.info(\n            (\"*\" * 40) + \" test_invalid_lattlong_value \" + (\"*\" * 40))\n    \n        # Reading from conftest value for lattlong parameter\n        # i.e. latitude & longitude values\n        lattlong = location_search_lattlong_invalid\n    \n        # Getting the response after making GET API call\n        response = ops.get(url=get_location_search_api_url,\n                           params={'lattlong': lattlong}\n                           )\n    \n        self.log.info(\n            \"\\nActual Response:\\nResponse Code: %s\", response.status_code)\n    \n        allure.dynamic.description(\n            \"Response time for the request is: \" +\n            str(response.elapsed.total_seconds()))\n    \n>       assert response.status_code == requests.codes.BAD_REQUEST\nE       AssertionError: assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\nE        +  and   400 = <lookup 'status_codes'>.BAD_REQUEST\nE        +    where <lookup 'status_codes'> = requests.codes\n\nfunctional_tests\\test_location_search.py:232: AssertionError"}, "description": "Response time for the request is: 0.479466", "attachments": [{"name": "log", "source": "64a76aec-54aa-44c5-871a-603b4fc2ca1d-attachment.txt", "type": "text/plain"}], "start": 1609738955651, "stop": 1609738956136, "uuid": "ad68db32-971d-4bf0-bb09-6badcef6e633", "historyId": "41ce07c9e310d3bd94bab51d0287f44d", "testCaseId": "6028e638f8ce8f6e471b44c251822c3d", "fullName": "functional_tests.test_location_search.TestLocationSearch#test_invalid_lattlong_value", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "LocationSearch"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "tag", "value": "Smoke"}, {"name": "parentSuite", "value": "functional_tests"}, {"name": "suite", "value": "test_location_search"}, {"name": "subSuite", "value": "TestLocationSearch"}, {"name": "host", "value": "4JK4X33"}, {"name": "thread", "value": "24456-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "functional_tests.test_location_search"}]}